/* 
ORGANIZAR FISICAMENTE E LOGICAMENTE UM BANCO DE DADOS 
1- CRIAR O BANCO COM ARQUIVOS PARA OS SETORES DE MKT E RH
2- CRIAR UM ARQUIVO GERAL
3- DEIXAR O MDF APENAS COM O DICIONARIO DE DADOS
4- CRIAR 2 GRUPOS DE ARQUIVOS (PRIMARY - MDF)
*/
USE EMPRESA 
GO

CREATE TABLE ALUNO(
    IDALUNO INT PRIMARY KEY IDENTITY,
	NOME VARCHAR(30) NOT NULL,
	SEXO CHAR(1) NOT NULL,
	NASCIMENTO DATE NOT NULL,
	EMAIL VARCHAR(30) UNIQUE
)
GO
/*CONSTRAINTS*/
ALTER TABLE ALUNO
ADD CONSTRAINT CK_SEXO CHECK(SEXO IN('M', 'F'))
GO
/*1X1*/
CREATE TABLE ENDERECO(
   ID_ENDERECO INT PRIMARY KEY IDENTITY(100,10),
   BAIRRO VARCHAR(30),
   UF CHAR(2)NOT NULL,
   CHECK(UF IN('RJ', 'SP','MG')),
   ID__ALUNO INT UNIQUE
)
GO

/* CRIANDO FK -> LIGAÇÃO DAS TABELAS*/
ALTER TABLE ENDERECO ADD CONSTRAINT FK_ENDERECO_ALUNO 
FOREIGN KEY(ID__ALUNO) REFERENCES ALUNO(IDALUNO)
GO

-- PROCIDURES - CRIADAS E ARMAZENADAS NO SISTEMA

SP_COLUMNS ALUNO
GO

SP_HELP ALUNO
GO

-- INSERINDO DADOS
INSERT INTO ALUNO VALUES
('ANDRE', 'M', '1981/12/09', 'ANDRE@GMAIL.COM')
INSERT INTO ALUNO VALUES
('MARIA', 'F', '1990/05/15', 'maria@gmail.com')
INSERT INTO ALUNO VALUES
('CARLOS', 'M', '1985/08/25', 'carlos@hotmail.com')
INSERT INTO ALUNO VALUES
('ANA', 'F', '1988/02/18', 'ana@yahoo.com')
INSERT INTO ALUNO VALUES
('FABIO', 'M', '1995/10/30', 'fabio@gmail.com')
INSERT INTO ALUNO VALUES
('LUCIA', 'F', '1982/06/14', 'lucia@hotmail.com')
INSERT INTO ALUNO VALUES
('RICARDO', 'M', '1998/03/22', 'ricardo@yahoo.com')
INSERT INTO ALUNO VALUES
('CLAUDIA', 'F', '1989/07/07', 'claudia@gmail.com')
INSERT INTO ALUNO VALUES
('GUSTAVO', 'M', '1993/11/18', 'gustavo@hotmail.com')
GO

SELECT * FROM ALUNO
GO

INSERT INTO ENDERECO VALUES('FLRAMENGO', 'RJ', 1)
INSERT INTO ENDERECO VALUES('MORUMBI', 'SP', 2)
INSERT INTO ENDERECO VALUES('TIJUCA', 'RJ', 8)
INSERT INTO ENDERECO VALUES('IPANEMA', 'RJ', 9)
INSERT INTO ENDERECO VALUES('PINHEIROS', 'SP', 5)
INSERT INTO ENDERECO VALUES('VILA OLIMPIA', 'SP', 6)
INSERT INTO ENDERECO VALUES('SAVASSI', 'MG', 7)
GO

SELECT * FROM ENDERECO
GO

--CRIENDO A TABELA TELEFONES 1xN
CREATE TABLE TELEFONE(
      IDTELEFONE INT PRIMARY KEY IDENTITY,
	  TIPO CHAR(3) NOT NULL,
	  NUMERO VARCHAR(10) NOT NULL,
	  ID_ALUNO INT,
	  CHECK (TIPO IN ('RES', 'COM', 'CEL'))
)
GO

INSERT INTO TELEFONE VALUES('CEL', '99873291', 1)
INSERT INTO TELEFONE VALUES('RES', '22334455', 1)
INSERT INTO TELEFONE VALUES('COM', '31234567', 1)
INSERT INTO TELEFONE VALUES('CEL', '987654321', 5)
INSERT INTO TELEFONE VALUES('RES', '11112222', 3)
INSERT INTO TELEFONE VALUES('CEL', '999888777', 4)
INSERT INTO TELEFONE VALUES('COM', '33334444', 5)
GO

SELECT * FROM TELEFONE
GO

-- pegar data atual
SELECT GETDATE()
GO

--CLAUSULA AMBIGUA
SELECT A.NOME, 
       ISNULL(T.TIPO, 'SEM') AS 'TIPO', 
	   ISNULL(T.NUMERO, 'NUMERO') AS 'TELEFONE',
	   E.BAIRRO, 
	   E.UF
FROM ALUNO A 
     INNER JOIN TELEFONE T
     ON A.IDALUNO=T.ID_ALUNO 
     INNER JOIN ENDERECO E
     ON A.IDALUNO=E.ID__ALUNO
GO

--coversão de dados
SELECT 1 + '1'
GO
SELECT '1' + '1'
GO
SELECT 'CURSO' + '1'
GO
--função conversão de dados
SELECT CAST('1' AS INT) + CAST('1' AS INT)
GO
--CONVERSAO E CONCATENACAO
SELECT NOME, NASCIMENTO
FROM ALUNO
GO

SELECT NOME, 
       CAST(DAY(NASCIMENTO) AS varchar)+'/'+
	   CAST(MONTH(NASCIMENTO)AS varchar)+'/'+
	   CAST(YEAR(NASCIMENTO)AS varchar) AS 'NASCIMENTO'
FROM ALUNO
GO

-- CHARINDEX - RETORNA UM INTEIRO
-- CONTAGEM DEFAULT - INICIA EM 01
SELECT NOME, CHARINDEX('A', NOME) AS INDICE
FROM ALUNO
GO

SELECT NOME, CHARINDEX('A', NOME, 2) AS INDICE
FROM ALUNO
GO

--BULK INSERT - OMPORTACAO DE ARQUIVOS
CREATE TABLE LACAMENTO_CONTABIL(
       CONTA INT,
	   VALOR INT,
	   DEB_CRED CHAR(1),
	   CHECK (DEB_CRED IN ('D', 'C'))
)
GO

SELECT * FROM LACAMENTO_CONTABIL
GO