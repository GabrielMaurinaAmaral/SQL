SHOW USER;

select 1+1 soma from dual;

SELECT METADATA FROM SYS.KOPM$;

--dicionario de dados
SELECT * FROM DICT;

--EU ESTOU UTILIZANDO PARALELIZMO
SELECT PARALLEL FROM V$INSTANCE;

--NOME DO BANCO DE DADOS
SELECT NAME FROM V$DATABASE;

--SERVAO DO BANCO
SELECT BANNER FROM V$VERSION;

--VERIFICAR PRIVILEGIOS DOS USUARIOS
SELECT * FROM USER_SYS_PRIVS;

--TABELAS DO USUARIO
SELECT TABLE_NAME FROM USER_TABLES;

CREATE TABLE cursos(
    ID_CURSOS INT PRIMARY KEY,
    NOME VARCHAR(30),
    CARGA INT
)TABLESPACE USERS;

CREATE TABLE teste(
    ID_TESTE INT PRIMARY KEY,
    NOME VARCHAR(30)
);

--DICIONARIO DE DADOS

SELECT TABLE_NAME, TABLESPACE_NAME
FROM USER_TABLES;

SELECT TABLE_NAME, TABLESPACE_NAME
FROM USER_TABLES
WHERE TABLE_NAME = 'CURSOS';

SELECT TABLE_NAME, TABLESPACE_NAME
FROM USER_TABLES
WHERE TABLE_NAME = 'TESTE';

-- SYSTEM - ENTRAO O OBJETIVO SERA CRIADO NA TABLESPACE
SELECT SEGMENT_NAME, SEGMENT_TYPE, TABLESPACE_NAME,
BYTES, BLOCKS, EXTENTS FROM USER_SEGMENTS;

SELECT SEGMENT_NAME, SEGMENT_TYPE, TABLESPACE_NAME,
BYTES, BLOCKS, EXTENTS FROM USER_SEGMENTS
WHERE SEGMENT_NAME = 'crusos';

-----------------------------------------------
--SEQUENCIAS
CREATE TABLESPACE RECURSOS_HUMANOS
DATAFILE 'C:/CODE/PraticaBasica/SQL/CURSO_SQL/RH_01.DBF'
SIZE 10M AUTOEXTEND
ON NEXT 20M
MAXSIZE 40M;

ALTER TABLESPACE RECURSOS_HUMANOS
ADD DATAFILE 'C:/CODE/PraticaBasica/SQL/CURSO_SQL/RH_02.DBF'
SIZE 10M AUTOEXTEND
ON NEXT 20M
MAXSIZE 40M;

SELECT TABLESPACE_NAME, FILE_NAME FROM DBA_DATA_FILES;

--SEQUENCES
CREATE SEQUENCE SEQ_GERAL
START WITH 100
INCREMENT BY 10;

-- CRIANDO UMA TABELA NA TABLESPACE
CREATE TABLE FUNCIONARIO(
   ID_FUNCIONARIO INT PRIMARY KEY,
   NOME VARCHAR2(30)
)TABLESPACE RECURSOS_HUMANOS;

INSERT INTO FUNCIONARIO VALUES(SEQ_GERAL.NEXTVAL,'JOAO');
INSERT INTO FUNCIONARIO VALUES(SEQ_GERAL.NEXTVAL,'JOTARO');
INSERT INTO FUNCIONARIO VALUES(SEQ_GERAL.NEXTVAL,'JOJO');

SELECT * FROM FUNCIONARIO;

--ALTERANDO TABLESPACE
--CRIANDO UMA TS MARKETING
CREATE TABLESPACE MARKETING
DATAFILE 'C:/CODE/PraticaBasica/SQL/CURSO_SQL/M_01.DBF'
SIZE 10M AUTOEXTEND
ON NEXT 20M
MAXSIZE 40M;

CREATE TABLE CAMPANHA(
   ID_FUNCIONARIO INT PRIMARY KEY,
   NOME VARCHAR2(30)
)TABLESPACE MARKETING;

INSERT INTO CAMPANHA VALUES(SEQ_GERAL.NEXTVAL,'OUTONO');
INSERT INTO CAMPANHA VALUES(SEQ_GERAL.NEXTVAL,'PRIMAVERA');
INSERT INTO CAMPANHA VALUES(SEQ_GERAL.NEXTVAL,'INVERNO');

SELECT * FROM MARKETING;
SELECT * FROM CAMPANHA;

---COLOCANDO TABLESPACE OFFILINE
ALTER TABLESPACE RECURSOS_HUMANOS OFFLINE;

--APONTAR O DICIONARIO DE DADOS
ALTER TABLESPACE RECURSOS_HUMANOS
RENAME DATAFILE 'C:/CODE/PraticaBasica/SQL/CURSO_SQL/RH_01.DBF' 
             TO 'C:/CODE/PraticaBasica/SQL/CURSO_SQL/RH_1.DBF';

ALTER TABLESPACE RECURSOS_HUMANOS
RENAME DATAFILE 'C:/CODE/PraticaBasica/SQL/CURSO_SQL/RH_02.DBF'
             TO 'C:/CODE/PraticaBasica/SQL/CURSO_SQL/RH_2.DBF';

---COLOCANDO TABLESPACE OFFILINE
ALTER TABLESPACE RECURSOS_HUMANOS ONLINE;

SELECT * FROM MARKETING;
SELECT * FROM CAMPANHA;


-- PSEUDO COLUNAS
DROP TABLE ALUNO;

CREATE TABLE ALUNO(
    ID_ALUNO INT PRIMARY KEY,
    NOME VARCHAR2(30),
    SALARIO NUMBER(10,2)
);

CREATE SEQUENCE SEQ_EXEMPLO; 

INSERT INTO ALUNO VALUES(SEQ_EXEMPLO.NEXTVAL, 'JOAO', 100.0);
INSERT INTO ALUNO VALUES(SEQ_EXEMPLO.NEXTVAL, 'ANA', 110.0);
INSERT INTO ALUNO VALUES(SEQ_EXEMPLO.NEXTVAL, 'PALO', 120.0);

SELECT * FROM ALUNO;

-- ROWID E ROWNUM
SELECT ROWID, ID_ALUNO FROM ALUNO;
SELECT ROWID, ROWNUM, ID_ALUNO FROM ALUNO;

--PROCEDURE
CREATE OR REPLACE PROCEDURE BONUS(P_ID_ALUNO ALUNO.ID_ALUNO%TYPE, P_PERCENT NUMBER)
AS
  BEGIN
       UPDATE ALUNO SET SALARIO = SALARIO + (SALARIO + (P_PERCENT/100))
       WHERE P_ID_ALUNO=P_ID_ALUNO;
  END;
  
SELECT * FROM ALUNO;

CALL BONUS(1,100);

--TRIGGER
CREATE OR REPLACE TRIGGER CRECK_SALARIO
BEFORE INSERT OR UPDATE ON ALUNO
FOR EACH ROW
BEGIN
     IF :NEW.SALARIO>2000 
         THEN RAISE_APPLICATION_ERROR(-20000, 'VALOR MAIOR QUE 2000');
     END IF;
END;
--MOSTRA ULTIMO ERRO
SHOW ERRORS;
-- TRIGGER EVENTOS
CREATE TABLE AUDITORIA(
    DATA_ DATE,
    LOGIN VARCHAR2(30)
);

CREATE OR REPLACE PROCEDURE LOGPROC IS
BEGIN
     INSERT INTO AUDITORIA(DATA_AUDITORIA, LOGIN)
     VALUES(SYSDATE,USER);
END LOGPROC;
-- trigger de falha LOG
CREATE OR REPLACE TRIGGER FALHA_LOGON
AFTER SERVERERROR 
ON DATABASE
BEGIN
     IF(IS_SERVERERROR(1017)) THEN
             INSERT INTO AUDITORIA(DATA_AUDITORIA, LOGIN)
             VALUES(SYSDATE,'ORA_10178');
     END IF;
END FALHA_LOGON;

SELECT * FROM AUDITORIA; 

-- OPERAÇÃO VIEW
CREATE TABLE CLIENTE(
    ID_CLIENTE INT PRIMARY KEY,
    NOME VARCHAR2(30),
    SEXO CHAR(1)
);

INSERT INTO CLIENTE VALUES(1007, 'MAFRA', 'M');
COMMIT;
SELECT * FROM CLIENTE;

CREATE OR REPLACE VIEW V_CLIENTE
AS 
  SELECT ID_CLIENTE, NOME, SEXO
  FROM CLIENTE;
  
INSERT INTO V_CLIENTE VALUES(1008, 'CLARA', 'F');

SELECT * FROM V_CLIENTE;
SELECT * FROM CLIENTE;  

